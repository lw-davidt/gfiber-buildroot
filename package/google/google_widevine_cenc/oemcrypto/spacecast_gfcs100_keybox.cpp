// Copyright 2014 Google Inc. All Rights Reserved.
//
//  Test keybox.

#include <cstring>

#include "blue.h"
#include "oemcrypto_keybox_mock.h"
#include "wv_keybox.h"

namespace wvoec_mock {

namespace {

const WidevineKeybox kKeybox = {
  {
    // deviceID
    "GoogleSpacecastgfsc10000000001"
  }, {
    // key ommited
  }, {
    // data
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x17, 0xf8,
    0x19, 0x29, 0xb1, 0xf9, 0x52, 0x3d, 0xb7, 0x44,
    0xe1, 0x6d, 0x01, 0x9f, 0xa1, 0x06, 0xda, 0xd9,
    0xdf, 0x9c, 0xeb, 0x64, 0xac, 0xfb, 0x73, 0xeb,
    0xa2, 0xaa, 0x95, 0x71, 0xf3, 0x93, 0xf7, 0x5e,
    0x49, 0x13, 0x9f, 0x63, 0xb0, 0xf4, 0x2c, 0x85,
    0x28, 0x48, 0x54, 0xb6, 0x06, 0x92, 0x16, 0x39,
    0x59, 0x09, 0x48, 0x03, 0x40, 0xc9, 0x02, 0xc3,
    0x8c, 0x38, 0xe8, 0xd0, 0x0c, 0x68, 0x4a, 0xe9,
  }, {
    // magic
    0x6b, 0x62, 0x6f, 0x78,
  }, {
    // Crc
    0xaf, 0xf2, 0x34, 0x3c,
  }
};

const uint8_t kObfuscatedKey[] = {
    0xd1, 0x1a, 0x1a, 0xc3, 0x64, 0x4c, 0xee, 0x07,
    0x8c, 0x43, 0x3b, 0x2e, 0x15, 0x97, 0x11, 0xb8,
    0x96, 0xe1, 0xdf, 0xb0, 0xf2, 0x1c, 0x80, 0xe0,
    0x41, 0x45, 0xd3, 0x61, 0x6a, 0x1d, 0xc2, 0x65,
};

}  // namespace

bool WvKeybox::Prepare() {
  // Make a local copy of the keybox.
  WidevineKeybox keybox;
  memcpy(&keybox, &kKeybox, sizeof(WidevineKeybox));

  // Unobfuscate the key.
  uint8_t clear[sizeof(kObfuscatedKey)];
  blue_client(clear, kObfuscatedKey);

  // Move the clear key into the local copy of the keybox.
  // NOTE: Clear device keys are half the size of obfuscated ones.
  memcpy(&keybox.device_key_, clear, sizeof(keybox.device_key_));
  memset(clear, 0, sizeof(clear));

  // Install the local copy of the keybox.
  uint8_t *bytes = reinterpret_cast<uint8_t*>(&keybox);
  InstallKeybox(bytes, sizeof(keybox));

  // Wipe the local copy of the keybox.
  memset(&keybox, 0, sizeof(keybox));
  return true;
}

}  // namespace wvoec_mock
